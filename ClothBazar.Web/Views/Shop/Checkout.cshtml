@model CheckoutViewModel
@{
    ViewBag.Title = "Checkout";
}

<style>
    .error {
        color: red;
    }

    .cont {
        background-color: #f2f2f2;
        padding: 5px 20px 15px 20px;
        border: 1px solid lightgrey;
        border-radius: 3px;
    }


    input[type=text] {
        width: 100%;
        margin-bottom: 20px;
        padding: 12px;
        border: 1px solid #ccc;
        border-radius: 3px;
    }

    .icon-container {
        margin-bottom: 20px;
        padding: 7px 0;
        font-size: 24px;
    }

    span.price {
        float: right;
        color: grey;
        color: black;
    }

    @@media(max-width: 800px) {
        .row {
            flex-direction: column-reverse;
        }

        .col-md-4 {
            margin-bottom: 20px;
        }
    }

    @@media(max-width:1000px) {
        .row {
            flex-direction: column-reverse;
        }

        .col-md-4 {
            margin-bottom: 20px;
        }
    }
</style>


@if (Model != null && Model.CartProducts != null && Model.CartProducts.Count > 0)
{
    <section class="flat-row main-shop shop-slidebar">
        <div class="container">
            <div class="row">
                <div class="col-md-4 order-md-2 mb-4">
                    <h4 class="d-flex justify-content-between align-items-center mb-3" style="font-size:1rem;">
                        Your Order Summary
                    </h4>
                    <ul class="list-group mb-3">
                        @foreach (var product in Model.CartProducts)
                        {
                            var productQuantity = Model.CartProductsIDs.Where(productID => productID == product.ID).Count();

                            <li class="list-group-item d-flex justify-content-between" data-id="@product.ID">

                                <h6 class="my-0">@product.Name x @productQuantity (Qty)  </h6>
                                <span class="text-muted" style="margin-left:1rem;"> Rs @product.Price</span>
                            </li>
                        }


                        <li class="list-group-item d-flex justify-content-between">
                            <span class="font-weight-bold">Total (Rs)</span>
                            <strong>Rs @Model.CartProducts.Sum(x => x.Price * Model.CartProductsIDs.Where(productID => productID == x.ID).Count())</strong>
                        </li>
                    </ul>
                </div>

                <div class="col-md-8 order-md-1">
                    <h4 class="mb-3" style="font-size:1rem;">Billing address</h4>
                    <form class="needs-validation" novalidate="">
                        <div class="row">
                            <div class="col-md-12 mb-3">
                                <label for="firstName">Name</label>
                                <input type="text" class="form-control" id="Name" placeholder="" value="@Model.User.Name" required="" disabled>
                            </div>

                            <div class="mb-3 col-md-12">
                                <label for="email">Email <span class="text-muted"></span></label>
                                <input type="email" class="form-control" id="Email" placeholder="you@example.com" value="@Model.User.Email" disabled>
                            </div>
                            <div class="mb-3 col-md-12">
                                <label for="address">Address</label>
                                <input type="text" class="form-control" id="address" placeholder="1234 Main St" required="" value="@Model.User.Address" disabled>
                            </div>
                            <div class="mb-3 col-md-12">
                                <label for="country">Country</label>
                                <input type="text" class="form-control" id="country" placeholder="Pakistan" required="" value="@Model.User.Country" disabled>
                            </div>
                        </div>
                        <hr class="mb-4">
                        <button id="placeOrderBtn" class="btn btn-danger btn-lg btn-block" type="button">Place Order!</button>
                    </form>
                </div>
            </div>
        </div>
    </section>


    <script>

        $(document).ready(function () {

            $("#placeOrderBtn").click(function () {

                $.ajax({
                    url: '@Url.Action("PlaceOrder", "Shop")',
                    data: {
                        productIDs: "@string.Join("-", Model.CartProductsIDs)"
                    }
                })

                .done(function (response) {
                    if (response.Success) {
                        $.cookie('CartProducts', '', { path: '/' });
                        updateCartProducts();
                        swal({
                            title: "Done",
                            text: "Your Order has been placed.",
                            icon: "success"
                        }).then((value) => {
                            window.location = '@Url.Action("Index","Shop")';
                        });
                    }
                    else {
                        swal({
                            title: "Failed ",
                            text: "Unable to place Order. Please Try Again!",
                            icon: "warning"
                        })
                    }
                })

                .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                    alert("FAIL");
                });

            });

        });


    </script>

}

else
{
    <section class="flat-row main-shop shop-slidebar">
        <div class="container">
            <div class="row">
                <div class="col-md-12 text-center">
                    <h2>No Products in Cart.</h2>
                </div>
            </div>
        </div>
    </section>
}




